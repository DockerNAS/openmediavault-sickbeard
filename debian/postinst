#!/bin/sh

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_SICKBEARD1_APP_PATH="/opt/sickbeard"
OMV_SICKBEARD2_APP_PATH="/opt/sickbeard2"
OMV_SICKBEARD1_OLD_DATA_PATH="/home/sickbeard/.sickbeard"
OMV_SICKBEARD2_OLD_DATA_PATH="/home/sickbeard/.sickbeard2"
OMV_SICKBEARD1_DATA_PATH="/var/opt/sickbeard"
OMV_SICKBEARD2_DATA_PATH="/var/opt/sickbeard2"
OMV_SICKBEARD_USER="sickbeard"
OMV_SICKBEARD_GROUP="users"
OMV_SICKBEARD_old="no"
OMV_SICKBEARD1_Configuration="/etc/default/sickbeard"
OMV_SICKBEARD2_Configuration="/etc/default/sickbeard2"

lang=$(locale | grep CTYPE= | cut -d= -f2)
if [ ${#lang} -lt 11 ]; then
    lang="en_US.UTF-8"
fi

migrate_data_location()
{
    if [ -d /home/sickbeard/.sickbeard ]; then
        # Migrate old data to new location.
        if [ ! -e $OMV_SICKBEARD1_DATA_PATH ]; then
            mkdir -p $OMV_SICKBEARD1_DATA_PATH
            chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD1_DATA_PATH -R
        fi
        su -s /bin/sh -c "cp -ra /home/sickbeard/.sickbeard/* ${OMV_SICKBEARD1_DATA_PATH}" $OMV_SICKBEARD_USER
    fi

    if [ -d /home/sickbeard/.sickbeard2 ]; then
        if [ ! -e $OMV_SICKBEARD2_DATA_PATH ]; then
            mkdir -p $OMV_SICKBEARD2_DATA_PATH
            chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD2_DATA_PATH -R
        fi
        # Migrate old data to new location.
        su -s /bin/sh -c "cp -ra /home/sickbeard/.sickbeard/* ${OMV_SICKBEARD2_DATA_PATH}" $OMV_SICKBEARD_USER
    fi

    # Remove sickbeard home directory.
    if [ -d /home/sickbeard ]; then
        rm -rf /home/sickbeard
    fi
}

case "$1" in
    configure)
        # Set the default settings of the service package to those expected by
        # OpenMediaVault.
        if [ -z "${2}" ]; then
            if [ -f /etc/systemd/system/sickbeard.service ]; then
                systemctl stop sickbeard.service
                systemctl disable sickbeard.service
            fi
            if [ -f /etc/systemd/system/sickbeard2.service ]; then
                systemctl stop sickbeard2.service
                systemctl disable sickbeard2.service
            fi
        fi

        SERVICE_XPATH_NAME="sickbeard"
        SERVICE_XPATH="/config/services/${SERVICE_XPATH_NAME}"

        if dpkg --compare-versions "${2}" lt-nl "3.1"; then
            migrate_data_location

            if omv_config_exists "${SERVICE_XPATH}"; then
                ENABLE="$(omv_config_get "${SERVICE_XPATH}/enable")"
                SHOWTAB="$(omv_config_get "${SERVICE_XPATH}/show_tab")"
                BRANCH="$(omv_config_get "${SERVICE_XPATH}/branch")"
                REPO="$(omv_config_get "${SERVICE_XPATH}/repo")"
            else
                ENABLE="0"
                SHOWTAB="0"
                BRANCH="Please choose a branch"
                REPO="Please choose a repository"
            fi

            if omv_config_exists "${SERVICE_XPATH}/username"; then
                USERNAME="$(omv_config_get "${SERVICE_XPATH}/username")"
                USERGRP="$(omv_config_get "${SERVICE_XPATH}/usersgrp")"
                UMASK="$(omv_config_get "${SERVICE_XPATH}/umask")"
            else
                USERNAME="sickbeard"
                USERGRP="0"
                UMASK="000"
            fi

            if omv_config_exists "${SERVICE_XPATH}/repo2"; then
                BRANCH2="$(omv_config_get "${SERVICE_XPATH}/branch2")"
                REPO2="$(omv_config_get "${SERVICE_XPATH}/repo2")"
                SSL="$(omv_config_get "${SERVICE_XPATH}/ssl")"
                PPASS="$(omv_config_get "${SERVICE_XPATH}/ppass")"
                INSTAL="$(omv_config_get "${SERVICE_XPATH}/newinstance")"
                RUN="$(omv_config_get "${SERVICE_XPATH}/newinstenable")"
                PORT="$(omv_config_get "${SERVICE_XPATH}/port")"
            else
                SSL="0"
                PPASS="0"
                BRANCH2="Please choose a branch"
                REPO2="Please choose a repository"
                INSTAL="0"
                RUN="0"
                PORT="8081"
            fi

            if omv_config_exists "${SERVICE_XPATH}/forks"; then
                FORKS="$(omv_config_get "${SERVICE_XPATH}/forks")"
            else
                FORKS=""
            fi

            omv_config_delete "${SERVICE_XPATH}"

            if ! omv_config_exists "${SERVICE_XPATH}"; then
                omv_config_add_element "/config/services" "${SERVICE_XPATH_NAME}"
                omv_config_add_element "${SERVICE_XPATH}" "newinstance" $INSTAL
            fi

            if ! omv_config_exists "${SERVICE_XPATH}/instances"; then
                omv_config_add_element "${SERVICE_XPATH}" "instances"
            fi

            if ! omv_config_exists "${SERVICE_XPATH}/forks"; then
                omv_config_add_element "${SERVICE_XPATH}" "forks" $FORKS
            fi

            if ! omv_config_exists "${SERVICE_XPATH}/instances/instance1"; then
                omv_config_add_element "${SERVICE_XPATH}/instances" "instance1"
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "enable" $ENABLE
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "repo" $REPO
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "branch" $BRANCH
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "ssl" $SSL
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "ppass" $PPASS
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "mntentref"
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "db-folder" "/var/opt/sickbeard"
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "username" $USERNAME
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "usersgrp" $USERGRP
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "umask" $UMASK
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "showtab" $SHOWTAB
                omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "port" "8081"
            fi

            if ! omv_config_exists "${SERVICE_XPATH}/instances/instance2"; then
                omv_config_add_element "${SERVICE_XPATH}/instances" "instance2"
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "enable" $RUN
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "repo" $REPO2
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "branch" $BRANCH2
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "ssl" $SSL
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "ppass" $PPASS
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "mntentref"
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "db-folder" "/var/opt/sickbeard2"
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "username" $USERNAME
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "usersgrp" $USERGRP
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "umask" $UMASK
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "showtab" $SHOWTAB
                omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "port" "8082"
            fi

        rm -f /var/cache/openmediavault/cache.*.json >/dev/null 2>&1

        fi

        if ! omv_config_exists "${SERVICE_XPATH}"; then
            echo "Updating configuration"

            omv_config_add_element "/config/services" "${SERVICE_XPATH_NAME}"
            omv_config_add_element "${SERVICE_XPATH}" "newinstance" "0"
        fi

        if ! omv_config_exists "${SERVICE_XPATH}/instances"; then
            omv_config_add_element "${SERVICE_XPATH}" "instances"
        fi

        if ! omv_config_exists "${SERVICE_XPATH}/forks"; then
            omv_config_add_element "${SERVICE_XPATH}" "forks"
        fi

        if ! omv_config_exists "${SERVICE_XPATH}/instances/instance1"; then
            omv_config_add_element "${SERVICE_XPATH}/instances" "instance1"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "enable" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "repo" "Please choose a repository"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "branch" "Please choose a branch"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "ssl" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "ppass" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "mntentref"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "db-folder" "/var/opt/sickbeard"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "username" "sickbeard"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "usersgrp" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "umask" "000"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "showtab" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance1" "port" "8081"
        fi

        if ! omv_config_exists "${SERVICE_XPATH}/instances/instance2"; then
            omv_config_add_element "${SERVICE_XPATH}/instances" "instance2"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "enable" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "repo" "Please choose a repository"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "branch" "Please choose a branch"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "ssl" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "ppass" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "mntentref"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "db-folder" "/var/opt/sickbeard2"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "username" "sickbeard"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "usersgrp" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "umask" "000"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "showtab" "0"
            omv_config_add_element "${SERVICE_XPATH}/instances/instance2" "port" "8082"
        fi

        if [ ! -f $OMV_SICKBEARD1_Configuration ]; then
            cat > $OMV_SICKBEARD1_Configuration <<EOF
SB_HOME=/opt/sickbeard/
SB_DATA=/var/opt/sickbeard/
SB_USER=sickbeard
PYTHON_BIN=/usr/bin/python
SB_OPTS=" --config=/var/opt/sickbeard/config.ini"
SSD_OPTS=" --group=users"
Environment=LC_ALL=$lang
Environment=LANG=$lang

EOF
             fi

        if [ ! -f $OMV_SICKBEARD2_Configuration ]; then
            cat > $OMV_SICKBEARD2_Configuration <<EOF
#Created by the openmediavault-sickbeard plugin
SB_HOME2=/opt/sickbeard2/
SB_DATA2=/var/opt/sickbeard2/
SB_USER=sickbeard
PYTHON_BIN=/usr/bin/python
SB_OPTS=" --config=/var/opt/sickbeard2/config.ini"
SSD_OPTS=" --group=users"
Environment=LC_ALL=$lang
Environment=LANG=$lang

EOF
        fi

        if [ "$OMV_SICKBEARD_old" = "yes" ] && getent passwd sickbeard >/dev/null 2>&1; then
            userdel -rf sickbeard
        fi

        if ! getent passwd sickbeard >/dev/null 2>&1; then
            adduser --quiet \
                    --system \
                    --group \
                    --no-create-home \
                    --disabled-password \
                    $OMV_SICKBEARD_USER
        fi

        if [ -e $OMV_SICKBEARD1_APP_PATH ]; then
            chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD1_APP_PATH
        fi

        if [ -e $OMV_SICKBEARD2_APP_PATH ]; then
            chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD2_APP_PATH
        fi

        dpkg-trigger update-fixperms
        dpkg-trigger update-locale
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument" >&2
        exit 1
    ;;
esac

#DEBHELPER#

exit 0
