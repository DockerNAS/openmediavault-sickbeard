#!/bin/sh

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

if [ -f /etc/default/sickbeard ]; then
    . /etc/default/sickbeard
fi

OMV_SICKBEARD1_APP_PATH=${CP_HOME-/opt/sickbeard/}
OMV_SICKBEARD1_DATA_PATH=${CP_DATA-/var/opt/sickbeard}
OMV_SICKBEARD1_DATA_CONFIG="${OMV_SICKBEARD1_DATA_PATH}/config.ini"
OMV_SICKBEARD2_APP_PATH=${CP_HOME2-/opt/sickbeard2/}
OMV_SICKBEARD2_DATA_PATH=${CP_DATA2-/var/opt/sickbeard2}
OMV_SICKBEARD2_DATA_CONFIG="${OMV_SICKBEARD2_DATA_PATH}/config.ini"
OMV_SICKBEARD_USER=${CP_USER-sickbeard}
OMV_SICKBEARD_GROUP=${CP_GROUP-users}
OMV_SICKBEARD_XPATH="/config/services/sickbeard"

newinstance="$(omv_config_get "//services/sickbeard/newinstance")"
newinstenable="$(omv_config_get "//services/sickbeard/newinstenable")"
ppass="$(omv_config_get "//services/sickbeard/ppass")"
ssl="$(omv_config_get "//services/sickbeard/ssl")"

if [ -f /etc/init.d/sickbeard2 ]; then
    /etc/init.d/sickbeard2 stop > /dev/null 2>&1
fi

switch_repo()
{
    local repo=$1
    local branch=$2

    if [ -d $OMV_SICKBEARD1_APP_PATH ]; then
        find $OMV_SICKBEARD1_APP_PATH -mindepth 1 -delete
    fi

    if [ -d $OMV_SICKBEARD1_DATA_PATH ]; then
        find $OMV_SICKBEARD1_DATA_PATH -mindepth 1 -delete
    fi

    cd /home
    su -s /bin/sh -c "git clone $repo -b $branch $OMV_SICKBEARD1_APP_PATH" $OMV_SICKBEARD_USER

    if [ ! -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
        echo '[General]
launch_browser = 0
git_path = "/usr/bin/git"
port = 8081
web_port = 8081
web_host = 0.0.0.0
enable_https = 0
https_cert = server.crt
https_key = server.key
web_root = ""' > $OMV_SICKBEARD1_DATA_CONFIG
    chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD1_DATA_CONFIG
    chmod 775 $OMV_SICKBEARD1_DATA_CONFIG
    fi
}

switch_branch()
{
    local branch=$1

    cd $OMV_SICKBEARD1_APP_PATH
    su -s /bin/sh -c "git reset --hard" $OMV_SICKBEARD_USER
    su -s /bin/sh -c "git checkout $branch" $OMV_SICKBEARD_USER
}

repo="$(omv_config_get "//services/sickbeard/repo")"
branch="$(omv_config_get "//services/sickbeard/branch")"

# If $OMV_SICKBEARD1_APP_PATH does not exist it must be first clone.
if [ ! -f "${OMV_SICKBEARD1_APP_PATH}SickBeard.py" ]; then
    find $OMV_SICKBEARD1_APP_PATH -mindepth 1 -delete
    if [ "${repo}" != "Please choose a repository" ] && [ "${branch}" != "Please choose a branch" ]; then
        switch_repo $repo $branch
    fi
fi

# If $OMV_SICKBEARD1_APP_PATH exists and is not empty fetch current repo and branch.
if [ ! -f "${OMV_SICKBEARD1_APP_PATH}SickBeard.py" ]; then
    find $OMV_SICKBEARD1_APP_PATH -mindepth 1 -delete
    if [ "${repo}" != "Please choose a repository" ] && [ "${branch}" != "Please choose a branch" ]; then
        switch_repo $repo $branch
    fi
fi

if [ -n "$(ls -A $OMV_SICKBEARD1_APP_PATH)" ]; then
    cd $OMV_SICKBEARD1_APP_PATH

    current_repo="$(git config --get remote.origin.url)"
    current_branch="$(git rev-parse --abbrev-ref HEAD)"

    if [ $repo != $current_repo ]; then
        switch_repo $repo $branch
    fi

    if [ $branch != $current_branch ]; then
        switch_branch $branch
    fi
else
    find $OMV_SICKBEARD1_APP_PATH -mindepth 1 -delete
    switch_repo $repo $branch
fi

if [ $newinstance = "1" ]; then
    if  [ ! -f /etc/init.d/sickbeard2 ]; then
        cat > /etc/init.d/sickbeard2 <<'EOF'
#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          sickbeard2
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      $NetworkManager
# Should-Stop:       $NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts instance of SickBeard2
# Description:       starts instance of SickBeard2 using start-stop-daemon
### END INIT INFO

# Source SickBeard configuration
if [ -f /etc/default/sickbeard2 ]; then
    . /etc/default/sickbeard2
fi

# Script name
NAME=sickbeard2

# App name
DESC=SickBeard2

## Don't edit this file
## Edit user configuation in /etc/default/sickbeard to change
##
## SB_USER=         #$RUN_AS, username to run sickbeard under, the default is sickbeard
## SB_HOME=         #$APP_PATH, the location of SickBeard.py, the default is /opt/sickbeard
## SB_DATA=         #$DATA_DIR, the location of sickbeard.db, cache, logs, the default is /opt/sickbeard
## SB_PIDFILE=      #$PID_FILE, the location of sickbeard.pid, the default is /var/run/sickbeard/sickbeard.pid
## PYTHON_BIN=      #$DAEMON, the location of the python binary, the default is /usr/bin/python
## SB_OPTS=         #$EXTRA_DAEMON_OPTS, extra cli option for sickbeard, i.e. " --config=/home/sickbeard/config.ini"
## SSD_OPTS=        #$EXTRA_SSD_OPTS, extra start-stop-daemon option like " --group=users"
##
## EXAMPLE if want to run as different user
## add SB_USER=username to /etc/default/sickbeard
## otherwise default sickbeard is used

## The defaults
# Run as username
RUN_AS=${SB_USER-sickbeard}

# Path to app SB_HOME=path_to_app_SickBeard.py
APP_PATH=${SB_HOME-/opt/sickbeard2}

# Data directory where sickbeard.db, cache and logs are stored
DATA_DIR=${SB_DATA-/var/opt/sickbeard2}

# Path to store PID file
PID_FILE=${SB_PIDFILE-/var/run/sickbeard/sickbeard2.pid}

# path to python bin
DAEMON=${PYTHON_BIN-/usr/bin/python}

# Extra daemon option like: SB_OPTS=" --config=/home/sickbeard/config.ini"
EXTRA_DAEMON_OPTS=${SB_OPTS- --config=/var/opt/sickbeard2/config.ini}

# Extra start-stop-daemon option like START_OPTS=" --group=users"
EXTRA_SSD_OPTS=${SSD_OPTS- --group=users}
##

PID_PATH=`dirname $PID_FILE`
DAEMON_OPTS=" SickBeard.py -q --daemon --nolaunch --pidfile=${PID_FILE} --datadir=${DATA_DIR} ${EXTRA_DAEMON_OPTS}"

##

test -x $DAEMON || exit 0

set -e

# Create PID directory if not exist and ensure the SickBeard user can write to it
if [ ! -d $PID_PATH ]; then
    mkdir -p $PID_PATH
    chown $RUN_AS $PID_PATH
fi

if [ ! -d $DATA_DIR ]; then
    mkdir -p $DATA_DIR
    chown $RUN_AS $DATA_DIR
fi

if [ -e $PID_FILE ]; then
    PID=`cat $PID_FILE`
    if ! kill -0 $PID > /dev/null 2>&1; then
        echo "Removing stale $PID_FILE"
        rm $PID_FILE
    fi
fi

case "$1" in
    start)
        echo "Starting $DESC"
        start-stop-daemon -d $APP_PATH -c $RUN_AS $EXTRA_SSD_OPTS --start --pidfile $PID_FILE --exec $DAEMON -- $DAEMON_OPTS > /dev/null 2>&1
        ;;

    stop)
        echo "Stopping $DESC"
        start-stop-daemon --stop --pidfile $PID_FILE --retry 15 --oknodo > /dev/null 2>&1
        ;;

    restart|force-reload)
        echo "Restarting $DESC"
        start-stop-daemon --stop --pidfile $PID_FILE --retry 15 --oknodo > /dev/null 2>&1
        start-stop-daemon -d $APP_PATH -c $RUN_AS $EXTRA_SSD_OPTS --start --pidfile $PID_FILE --exec $DAEMON -- $DAEMON_OPTS > /dev/null 2>&1
        ;;

    status)
        # Use LSB function library if it exists
        if [ -f /lib/lsb/init-functions ]; then
            . /lib/lsb/init-functions

            if [ -e $PID_FILE ]; then
                status_of_proc -p $PID_FILE "$DAEMON" "$NAME" && exit 0 || exit $?
            else
                log_daemon_msg "$NAME is not running"
                exit 3
            fi

        else
        # Use basic functions
            if [ -e $PID_FILE ]; then
                PID=`cat $PID_FILE`
                if kill -0 $PID > /dev/null 2>&1; then
                    echo " * $NAME is running"
                    exit 0
                fi
            else
                echo " * $NAME is not running"
                exit 3
            fi
        fi
        ;;

    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|force-reload|status}" >&2
        exit 1
        ;;
esac

exit 0

EOF
        chmod +x /etc/init.d/sickbeard2
        insserv -d sickbeard2
    fi
    if [ $newinstenable = "1" ]; then
        repo2="$(omv_config_get "//services/sickbeard/repo2")"
        branch2="$(omv_config_get "//services/sickbeard/branch2")"
        if [ ! -f "${OMV_SICKBEARD2_APP_PATH}SickBeard.py" ]; then
            rm -Rf $OMV_SICKBEARD2_APP_PATH > /dev/null 2>&1
            cd /home
            su -s /bin/sh -c "git clone $repo2 -b $branch2 $OMV_SICKBEARD2_APP_PATH" $OMV_SICKBEARD_USER > /dev/null 2>&1
            # Can not create dir as user so create it then change ownership.
            mkdir -p $OMV_SICKBEARD2_DATA_PATH
            chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD2_DATA_PATH
        else
            cd $OMV_SICKBEARD2_APP_PATH
            current_repo2="$(git config --get remote.origin.url)"

            if [ $repo2 != $current_repo2 ]; then
                if [ -d $OMV_SICKBEARD2_APP_PATH ]; then
                    find $OMV_SICKBEARD2_APP_PATH -mindepth 1 -delete
                fi

                if [ -d $OMV_SICKBEARD2_DATA_PATH ]; then
                    find $OMV_SICKBEARD2_DATA_PATH -mindepth 1 -delete
                fi

                cd /home
                su -s /bin/sh -c "git clone $repo2 -b $branch2 $OMV_SICKBEARD2_APP_PATH" $OMV_SICKBEARD_USER
                # Can not create dir as user so create it then change ownership.
                mkdir -p $OMV_SICKBEARD2_DATA_PATH
                chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD2_DATA_PATH
            fi

            cd $OMV_SICKBEARD2_APP_PATH
            current_branch2="$(git rev-parse --abbrev-ref HEAD)"

            if [ $branch2 != $current_branch2 ]; then
                cd $OMV_SICKBEARD2_APP_PATH
                su -s /bin/sh -c "git reset --hard" $OMV_SICKBEARD_USER
                su -s /bin/sh -c "git checkout $branch2" $OMV_SICKBEARD_USER
            fi
        fi
        if [ ! -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
            echo '[General]
launch_browser = 0
git_path = "/usr/bin/git"
port = 8082
web_port = 8082
web_host = 0.0.0.0
enable_https = 0
https_cert = server.crt
https_key = server.key
web_root = ""' > $OMV_SICKBEARD2_DATA_CONFIG
            chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD2_DATA_CONFIG
            chmod 775 $OMV_SICKBEARD2_DATA_CONFIG
        else
            sed -i 's/^port = 8081/port = 8082/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^web_port = 8081/web_port = 8082/' $OMV_SICKBEARD2_DATA_CONFIG
        fi
    fi
else
    if  [ -f /etc/init.d/sickbeard2 ]; then
        if [ -f "/var/run/sickbeard/sickbeard2.pid" ]; then
            rm -Rf /var/run/sickbeard/sickbeard2.pid > /dev/null 2>&1
        fi

        update-rc.d sickbeard2 disable > /dev/null 2>&1
        rm -Rf $OMV_SICKBEARD2_DATA_PATH > /dev/null 2>&1
        rm -Rf /etc/init.d/sickbeard2 > /dev/null 2>&1
        rm -Rf $OMV_SICKBEARD2_APP_PATH > /dev/null 2>&1
        newinstenable="0"
        xmlstarlet ed -L -u "//services/sickbeard/newinstenable" -v 0 -n $OMV_CONFIG_FILE
    fi
fi

if [ $ssl = "1" ]; then
    if [ ! -f "${OMV_SICKBEARD1_DATA_PATH}/Certificate.crt" ]; then
        # Create the certificate files.
        xmlstarlet sel -t -m "//system/certificates/sslcertificate" \
          -v uuid -i "position() != last()" -n -b \
          ${OMV_CONFIG_FILE} | xmlstarlet unesc |
          while read uuid; do
                  crtfile="${OMV_SICKBEARD1_DATA_PATH}/Certificate.crt"
                  xmlstarlet sel -t -m "//system/certificates/sslcertificate[uuid='${uuid}']" \
                        -v certificate \
                        ${OMV_CONFIG_FILE} | xmlstarlet unesc > ${crtfile}
                  chmod 0640 ${crtfile}
                  chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP ${crtfile}

                  keyfile="${OMV_SICKBEARD1_DATA_PATH}/Private.key"
                  xmlstarlet sel -t -m "//system/certificates/sslcertificate[uuid='${uuid}']" \
                        -v privatekey \
                        ${OMV_CONFIG_FILE} | xmlstarlet unesc > ${keyfile}
                  chmod 0600 ${keyfile}
                  chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP ${keyfile}
          done
        #Enable
        if [ -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
            sed -i 's/^enable_https.*/enable_https = 1/' $OMV_SICKBEARD1_DATA_CONFIG
            sed -i 's/^https_cert.*/https_cert = \/home\/sickbeard\/Certificate.crt/' $OMV_SICKBEARD1_DATA_CONFIG
            sed -i 's/^https_key.*/https_key = \/home\/sickbeard\/Private.key/' $OMV_SICKBEARD1_DATA_CONFIG
        fi
        if [ -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
            sed -i 's/^enable_https.*/enable_https = 1/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^https_cert.*/https_cert = \/home\/sickbeard\/Certificate.crt/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^https_key.*/https_key = \/home\/sickbeard\/Private.key/' $OMV_SICKBEARD2_DATA_CONFIG
        fi
    fi
else
    if [ -f "${OMV_SICKBEARD1_DATA_PATH}/Certificate.crt" ]; then
        #Disable
        if [ -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
            sed -i 's/^enable_https.*/enable_https = 0/' $OMV_SICKBEARD1_DATA_CONFIG
            sed -i 's/^https_cert.*/https_cert = server.crt/' $OMV_SICKBEARD1_DATA_CONFIG
            sed -i 's/^https_key.*/https_key = server.key/' $OMV_SICKBEARD1_DATA_CONFIG
        fi
        if [ -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
            sed -i 's/^enable_https.*/enable_https = 0/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^https_cert.*/https_cert = server.crt/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^https_key.*/https_key = server.key/' $OMV_SICKBEARD2_DATA_CONFIG
        fi
        rm -Rf "${OMV_SICKBEARD1_DATA_PATH}/Certificate.crt" > /dev/null 2>&1
        rm -Rf "${OMV_SICKBEARD1_DATA_PATH}/Private.key" > /dev/null 2>&1
    fi
fi

if [ $ppass = "1" ]; then
    cat <<EOF > /etc/nginx/openmediavault-webgui.d/sb.conf
location /sickbeard {
        proxy_pass        http://localhost:8081/sickbeard;
        proxy_set_header  Host localhost:8081;
        proxy_redirect    default;
}

EOF
    if [ -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
        sed -i 's/^web_root.*/web_root = "\/sickbeard"/' $OMV_SICKBEARD1_DATA_CONFIG
    fi
    if [ -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
        sed -i 's/^web_root.*/web_root = "\/sickbeard2"/' $OMV_SICKBEARD2_DATA_CONFIG
    fi
    if [ $newinstance = "1" ]; then
        cat <<EOF >> /etc/nginx/openmediavault-webgui.d/sb.conf
location /sickbeard2 {
        proxy_pass        http://localhost:8082/sickbeard2;
        proxy_set_header  Host localhost:8082;
        proxy_redirect    default;
}

EOF
    fi
    nginx -s reload
else
    rm -Rf /etc/nginx/openmediavault-webgui.d/sb.conf > /dev/null 2>&1
    if [ -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
        sed -i 's/^web_root.*/web_root = ""/' $OMV_SICKBEARD1_DATA_CONFIG
    fi
    if [ -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
        sed -i 's/^web_root.*/web_root = ""/' $OMV_SICKBEARD2_DATA_CONFIG
    fi
    nginx -s reload
fi

if [ $newinstance = "1" ]; then
    if [ $newinstenable = "1" ]; then
        update-rc.d sickbeard2 enable > /dev/null 2>&1
        /etc/init.d/sickbeard2 start > /dev/null 2>&1
    else
        if [ -f /etc/init.d/sickbeard2 ]; then
            update-rc.d sickbeard2 disable > /dev/null 2>&1
        fi

        if [ -f /var/run/sickbeard/sickbeard2.pid ]; then
            rm -Rf /var/run/sickbeard/sickbeard2.pid > /dev/null 2>&1
        fi
    fi
fi
exit 0


