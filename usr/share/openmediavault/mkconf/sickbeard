#!/bin/sh

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

if [ -f /etc/default/sickbeard ]; then
    . /etc/default/sickbeard
fi

if [ -f /etc/default/sickbeard2 ]; then
    . /etc/default/sickbeard2
fi
OMV_SICKBEARD1_APP_PATH=${SB_HOME-/opt/sickbeard/}
OMV_SICKBEARD1_DATA_PATH=${SB_DATA-/var/opt/sickbeard}
OMV_SICKBEARD1_DATA_CONFIG="${OMV_SICKBEARD1_DATA_PATH}config.ini"
OMV_SICKBEARD2_APP_PATH=${SB_HOME2-/opt/sickbeard2/}
OMV_SICKBEARD2_DATA_PATH=${SB_DATA2-/var/opt/sickbeard2}
OMV_SICKBEARD2_DATA_CONFIG="${OMV_SICKBEARD2_DATA_PATH}config.ini"
OMV_SICKBEARD_USER=${SB_USER-sickbeard}
OMV_SICKBEARD_GROUP=${SB_GROUP-users}
OMV_SICKBEARD_XPATH="/config/services/sickbeard"

newinstance="$(omv_config_get "/config/services/sickbeard/newinstance")"
newinstenable="$(omv_config_get "/config/services/sickbeard/newinstenable")"
ppass="$(omv_config_get "/config/services/sickbeard/ppass")"
ssl="$(omv_config_get "/config/services/sickbeard/ssl")"

if [ -f /etc/systemd/system/sickbeard2.service ]; then
    service sickbeard2 stop > /dev/null 2>&1
fi

switch_repo()
{
    local repo=$1
    local branch=$2

    if [ -d $OMV_SICKBEARD1_APP_PATH ]; then
        find $OMV_SICKBEARD1_APP_PATH -mindepth 1 -delete
    fi

    if [ -d $OMV_SICKBEARD1_DATA_PATH ]; then
        find $OMV_SICKBEARD1_DATA_PATH -mindepth 1 -delete
    fi

    if [ ! -d $OMV_SICKBEARD1_DATA_PATH ]; then
        mkdir -p $OMV_SICKBEARD1_DATA_PATH
    fi

    cd /home
    su -s /bin/sh -c "git clone $repo -b $branch $OMV_SICKBEARD1_APP_PATH" $OMV_SICKBEARD_USER

    if [ ! -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
        echo '[General]
launch_browser = 0
git_path = "/usr/bin/git"
port = 8081
web_port = 8081
web_host = 0.0.0.0
enable_https = 0
https_cert = server.crt
https_key = server.key
web_root = ""' > $OMV_SICKBEARD1_DATA_CONFIG
    chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD1_DATA_PATH -R
    chmod 775 $OMV_SICKBEARD1_DATA_PATH -R
    fi
}

switch_branch()
{
    local branch=$1
    local repo=$2

    cd $OMV_SICKBEARD1_APP_PATH
    su -s /bin/sh -c "git reset --hard --quiet" $OMV_SICKBEARD_USER
    su -s /bin/sh -c "git checkout $branch --quiet" $OMV_SICKBEARD_USER

    if [ $repo = "https://github.com/SickRage/SickRage.git" ]; then
        if [ $branch = "master" ]; then
            rm -R "${OMV_SICKBEARD1_APP_PATH}lib/requests" > /dev/null 2>&1
            su -s /bin/sh -c "git reset --hard --quiet" $OMV_SICKBEARD_USER
        fi
    fi
}

repo="$(omv_config_get "/config/services/sickbeard/repo")"
branch="$(omv_config_get "/config/services/sickbeard/branch")"

if [ ! -d "${OMV_SICKBEARD1_APP_PATH}" ]; then
    mkdir -p $OMV_SICKBEARD1_APP_PATH
    chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD1_APP_PATH
fi

# If $OMV_SICKBEARD1_APP_PATH does not exist it must be first clone.
if [ ! -f "${OMV_SICKBEARD1_APP_PATH}SickBeard.py" ]; then
    find $OMV_SICKBEARD1_APP_PATH -mindepth 1 -delete
    if [ "${repo}" != "Please choose a repository" ] && [ "${branch}" != "Please choose a branch" ]; then
        switch_repo $repo $branch
    fi
fi

# If $OMV_SICKBEARD1_APP_PATH exists and is not empty fetch current repo and branch.
if [ ! -f "${OMV_SICKBEARD1_APP_PATH}SickBeard.py" ]; then
    find $OMV_SICKBEARD1_APP_PATH -mindepth 1 -delete
    if [ "${repo}" != "Please choose a repository" ] && [ "${branch}" != "Please choose a branch" ]; then
        switch_repo $repo $branch
    fi
fi

if [ -n "$(ls -A $OMV_SICKBEARD1_APP_PATH)" ]; then
    cd $OMV_SICKBEARD1_APP_PATH

    current_repo="$(git config --get remote.origin.url)"
    current_branch="$(git rev-parse --abbrev-ref HEAD)"

    if [ $repo != $current_repo ]; then
        switch_repo $repo $branch
    fi

    if [ $branch != $current_branch ]; then
        switch_branch $branch $repo
    fi
else
    find $OMV_SICKBEARD1_APP_PATH -mindepth 1 -delete
    switch_repo $repo $branch
fi

if [ $newinstance = "1" ]; then
    if  [ ! -f /etc/systemd/system/sickbeard2.service ]; then
        cat > /etc/systemd/system/sickbeard2.service <<'EOF'
[Unit]
Description=SickBeard2 Daemon

[Service]
User=sickbeard
Group=users
Type=forking
GuessMainPID=no
ExecStart=/usr/bin/python /opt/sickbeard2/SickBeard.py -q --daemon --nolaunch --datadir=/var/opt/sickbeard2

[Install]
WantedBy=multi-user.target

EOF
        systemctl enable sickbeard2.service
    fi
    if [ $newinstenable = "1" ]; then
        repo2="$(omv_config_get "/config/services/sickbeard/repo2")"
        branch2="$(omv_config_get "/config/services/sickbeard/branch2")"
        if [ ! -f "${OMV_SICKBEARD2_APP_PATH}SickBeard.py" ]; then
            if [ -d $OMV_SICKBEARD2_APP_PATH ]; then
                find $OMV_SICKBEARD2_APP_PATH -mindepth 1 -delete
            fi

            if [ -d $OMV_SICKBEARD2_DATA_PATH ]; then
                find $OMV_SICKBEARD2_DATA_PATH -mindepth 1 -delete
            fi
            cd /home
            su -s /bin/sh -c "git clone $repo2 -b $branch2 $OMV_SICKBEARD2_APP_PATH" $OMV_SICKBEARD_USER > /dev/null 2>&1
            # Can not create dir as user so create it then change ownership.
            mkdir -p $OMV_SICKBEARD2_DATA_PATH
            chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD2_DATA_PATH
        else
            cd $OMV_SICKBEARD2_APP_PATH
            current_repo2="$(git config --get remote.origin.url)"

            if [ $repo2 != $current_repo2 ]; then
                if [ -d $OMV_SICKBEARD2_APP_PATH ]; then
                    find $OMV_SICKBEARD2_APP_PATH -mindepth 1 -delete
                fi

                if [ -d $OMV_SICKBEARD2_DATA_PATH ]; then
                    find $OMV_SICKBEARD2_DATA_PATH -mindepth 1 -delete
                fi

                cd /home
                su -s /bin/sh -c "git clone $repo2 -b $branch2 $OMV_SICKBEARD2_APP_PATH" $OMV_SICKBEARD_USER
                # Can not create dir as user so create it then change ownership.
                mkdir -p $OMV_SICKBEARD2_DATA_PATH
                chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD2_DATA_PATH
            fi

            cd $OMV_SICKBEARD2_APP_PATH
            current_branch2="$(git rev-parse --abbrev-ref HEAD)"

            if [ $branch2 != $current_branch2 ]; then
                cd $OMV_SICKBEARD2_APP_PATH
                su -s /bin/sh -c "git reset --hard --quiet" $OMV_SICKBEARD_USER
                su -s /bin/sh -c "git checkout $branch2 --quiet" $OMV_SICKBEARD_USER
                if [ $repo2 = "https://github.com/SickRage/SickRage.git" ]; then
                    if [ $branch2 = "master" ]; then
                        rm -R "${OMV_SICKBEARD2_APP_PATH}lib/requests" > /dev/null 2>&1
                        su -s /bin/sh -c "git reset --hard --quiet" $OMV_SICKBEARD_USER
                    fi
                fi
            fi
        fi
        if [ ! -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
            echo '[General]
launch_browser = 0
git_path = "/usr/bin/git"
port = 8082
web_port = 8082
web_host = 0.0.0.0
enable_https = 0
https_cert = server.crt
https_key = server.key
web_root = ""' > $OMV_SICKBEARD2_DATA_CONFIG
            chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP $OMV_SICKBEARD2_DATA_PATH -R
            chmod 775 $OMV_SICKBEARD2_DATA_PATH -R
        else
            sed -i 's/^port = 8081/port = 8082/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^web_port = 8081/web_port = 8082/' $OMV_SICKBEARD2_DATA_CONFIG
        fi
    fi
else
    if  [ -f /etc/systemd/system/sickbeard2.service ]; then
        if [ -f "/var/run/sickbeard/sickbeard2.pid" ]; then
            rm -Rf /var/run/sickbeard/sickbeard2.pid > /dev/null 2>&1
        fi

        systemctl disable sickbeard2.service > /dev/null 2>&1
        if [ -d $OMV_SICKBEARD2_APP_PATH ]; then
            find $OMV_SICKBEARD2_APP_PATH -mindepth 1 -delete
        fi

        if [ -d $OMV_SICKBEARD2_DATA_PATH ]; then
            find $OMV_SICKBEARD2_DATA_PATH -mindepth 1 -delete
        fi
        rm -Rf /etc/systemd/system/sickbeard2.service > /dev/null 2>&1

        newinstenable="0"
        xmlstarlet ed -L -u "/config/services/sickbeard/newinstenable" -v 0 $OMV_CONFIG_FILE
    fi
fi

if [ $ssl = "1" ]; then
    if [ ! -f "${OMV_SICKBEARD1_DATA_PATH}/Certificate.crt" ]; then
        # Create the certificate files.
        xmlstarlet sel -t -m "/config/system/certificates/sslcertificate" \
          -v uuid -i "position() != last()" -n -b \
          ${OMV_CONFIG_FILE} | xmlstarlet unesc |
          while read uuid; do
                  crtfile="${OMV_SICKBEARD1_DATA_PATH}/Certificate.crt"
                  xmlstarlet sel -t -m "/config/system/certificates/sslcertificate[uuid='${uuid}']" \
                        -v certificate \
                        ${OMV_CONFIG_FILE} | xmlstarlet unesc > ${crtfile}
                  chmod 0640 ${crtfile}
                  chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP ${crtfile}

                  keyfile="${OMV_SICKBEARD1_DATA_PATH}/Private.key"
                  xmlstarlet sel -t -m "/config/system/certificates/sslcertificate[uuid='${uuid}']" \
                        -v privatekey \
                        ${OMV_CONFIG_FILE} | xmlstarlet unesc > ${keyfile}
                  chmod 0600 ${keyfile}
                  chown $OMV_SICKBEARD_USER:$OMV_SICKBEARD_GROUP ${keyfile}
          done
        #Enable
        if [ -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
            sed -i 's/^enable_https.*/enable_https = 1/' $OMV_SICKBEARD1_DATA_CONFIG
            sed -i 's/^https_cert.*/https_cert = \/home\/sickbeard\/Certificate.crt/' $OMV_SICKBEARD1_DATA_CONFIG
            sed -i 's/^https_key.*/https_key = \/home\/sickbeard\/Private.key/' $OMV_SICKBEARD1_DATA_CONFIG
        fi
        if [ -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
            sed -i 's/^enable_https.*/enable_https = 1/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^https_cert.*/https_cert = \/home\/sickbeard\/Certificate.crt/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^https_key.*/https_key = \/home\/sickbeard\/Private.key/' $OMV_SICKBEARD2_DATA_CONFIG
        fi
    fi
else
    if [ -f "${OMV_SICKBEARD1_DATA_PATH}/Certificate.crt" ]; then
        #Disable
        if [ -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
            sed -i 's/^enable_https.*/enable_https = 0/' $OMV_SICKBEARD1_DATA_CONFIG
            sed -i 's/^https_cert.*/https_cert = server.crt/' $OMV_SICKBEARD1_DATA_CONFIG
            sed -i 's/^https_key.*/https_key = server.key/' $OMV_SICKBEARD1_DATA_CONFIG
        fi
        if [ -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
            sed -i 's/^enable_https.*/enable_https = 0/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^https_cert.*/https_cert = server.crt/' $OMV_SICKBEARD2_DATA_CONFIG
            sed -i 's/^https_key.*/https_key = server.key/' $OMV_SICKBEARD2_DATA_CONFIG
        fi
        rm -Rf "${OMV_SICKBEARD1_DATA_PATH}/Certificate.crt" > /dev/null 2>&1
        rm -Rf "${OMV_SICKBEARD1_DATA_PATH}/Private.key" > /dev/null 2>&1
    fi
fi

if [ $ppass = "1" ]; then
    cat <<EOF > /etc/nginx/openmediavault-webgui.d/sb.conf
location /sickbeard {
        proxy_pass        http://localhost:8081/sickbeard;
        proxy_set_header  Host localhost:8081;
        proxy_redirect    default;
}

EOF
    if [ -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
        sed -i 's/^web_root.*/web_root = "\/sickbeard"/' $OMV_SICKBEARD1_DATA_CONFIG
    fi
    if [ -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
        sed -i 's/^web_root.*/web_root = "\/sickbeard2"/' $OMV_SICKBEARD2_DATA_CONFIG
    fi
    if [ $newinstance = "1" ]; then
        cat <<EOF >> /etc/nginx/openmediavault-webgui.d/sb.conf
location /sickbeard2 {
        proxy_pass        http://localhost:8082/sickbeard2;
        proxy_set_header  Host localhost:8082;
        proxy_redirect    default;
}

EOF
    fi
    nginx -s reload
else
    rm -Rf /etc/nginx/openmediavault-webgui.d/sb.conf > /dev/null 2>&1
    if [ -f $OMV_SICKBEARD1_DATA_CONFIG ]; then
        sed -i 's/^web_root.*/web_root = ""/' $OMV_SICKBEARD1_DATA_CONFIG
    fi
    if [ -f $OMV_SICKBEARD2_DATA_CONFIG ]; then
        sed -i 's/^web_root.*/web_root = ""/' $OMV_SICKBEARD2_DATA_CONFIG
    fi
    nginx -s reload
fi

if [ $newinstance = "1" ]; then
    if [ $newinstenable = "1" ]; then
        systemctl enable sickbeard2.service > /dev/null 2>&1
        service sickbeard2 start &> /dev/null 2>&1
    else
        if [ -f /etc/init.d/sickbeard2 ]; then
            systemctl disable sickbeard2.service > /dev/null 2>&1
        fi

        if [ -f /var/run/sickbeard/sickbeard2.pid ]; then
            rm -Rf /var/run/sickbeard/sickbeard2.pid > /dev/null 2>&1
        fi
    fi
fi
exit 0
